<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>athena-admin-server</artifactId>
	<packaging>jar</packaging>
	<name>athena admin server</name>
	<description>应用健康检查后台管理</description>

	<parent>
		<groupId>com.xiongyayun.framework</groupId>
		<artifactId>athena-platform</artifactId>
		<version>${revision}</version>
	</parent>

	<properties>
		<docker.image.prefix>registry.cn-shanghai.aliyuncs.com/xiongyayun/athena</docker.image.prefix>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.xiongyayun.boot</groupId>
			<artifactId>athena-spring-boot-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-server</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-server-ui</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>com.xiongyayun</groupId>-->
<!--			<artifactId>athena-starter-docker</artifactId>-->
<!--		</dependency>-->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>com.spotify</groupId>-->
<!--				<artifactId>dockerfile-maven-plugin</artifactId>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>default</id>-->
<!--						<goals>-->
<!--							&lt;!&ndash;如果package时不想用docker打包,就注释掉这个goal&ndash;&gt;-->
<!--							<goal>build</goal>-->
<!--							<goal>push</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--				<configuration>-->
<!--					<repository>${docker.image.prefix}/${project.artifactId}</repository>-->
<!--					&lt;!&ndash; 不指定tag默认为latest&ndash;&gt;-->
<!--					<tag>${project.version}</tag>-->
<!--					<buildArgs>-->
<!--						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>-->
<!--					</buildArgs>-->
<!--				</configuration>-->
<!--			</plugin>-->
		</plugins>
<!--		<extensions>-->
<!--			<extension>-->
<!--				<groupId>com.spotify</groupId>-->
<!--				<artifactId>dockerfile-maven-extension</artifactId>-->
<!--				<version>${dockerfile-maven-version}</version>-->
<!--			</extension>-->
<!--		</extensions>-->
	</build>

</project>
