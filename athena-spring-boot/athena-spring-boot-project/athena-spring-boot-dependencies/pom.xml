<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
        <groupId>com.xiongyayun.boot</groupId>
        <artifactId>athena-spring-boot-build</artifactId>
		<version>${revision}</version>
		<relativePath>../..</relativePath>
    </parent>
    <artifactId>athena-spring-boot-dependencies</artifactId>
    <packaging>pom</packaging>
	<name>Athena Spring Boot Dependencies</name>
    <description>依赖</description>

    <properties>
        <main.basedir>${basedir}/../..</main.basedir>
		<!-- Dependency versions -->
        <spring-boot.version>2.3.4.RELEASE</spring-boot.version>
        <druid.version>1.1.23</druid.version>
        <druid-starter.version>1.1.23</druid-starter.version>

        <maven-plugin-api.version>3.6.1</maven-plugin-api.version>
        <maven-plugin-annotations.version>3.6.0</maven-plugin-annotations.version>
        <maven-plugin-plugin.version>3.6.0</maven-plugin-plugin.version>

        <aliyun-sdk-oss.version>3.9.1</aliyun-sdk-oss.version>
        <alibaba-nacos.version>0.2.7</alibaba-nacos.version>

        <spring-security-oauth2.version>2.4.1.RELEASE</spring-security-oauth2.version>
        <spring-boot-admin.version>2.2.3</spring-boot-admin.version>
        <java-jwt.version>3.10.3</java-jwt.version>
        <hutool-all.version>5.3.5</hutool-all.version>
		<mybatis-plus-boot.version>3.3.2</mybatis-plus-boot.version>
        <mybatis-spring-boot.version>2.1.3</mybatis-spring-boot.version>
        <mybatis-generator.version>1.4.0</mybatis-generator.version>
        <mapper-spring-boot.version>2.1.5</mapper-spring-boot.version>
        <tk.mybatis.mapper.version>4.1.5</tk.mybatis.mapper.version>
        <pagehelper-spring-boot.version>1.3.0</pagehelper-spring-boot.version>
        <pagehelper.version>5.2.0</pagehelper.version>
        <jasypt-spring-boot.version>3.0.3</jasypt-spring-boot.version>
        <alibaba-fastjson.version>1.2.68</alibaba-fastjson.version>
        <flywaydb.version>6.5.0</flywaydb.version>
		<pentaho-kettle.version>9.2.0.0-93</pentaho-kettle.version>
		<xxl-job.version>2.2.0</xxl-job.version>

		<!-- Plugin versions -->
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<jasypt-maven-plugin.version>3.0.2</jasypt-maven-plugin.version>
		<dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
		<flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version>
		<xml-maven-plugin.version>1.0.2</xml-maven-plugin.version>
		<build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot Dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- athena -->
            <dependency>
				<groupId>com.xiongyayun.boot</groupId>
                <artifactId>athena-spring-boot-actuator</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.xiongyayun.boot</groupId>
                <artifactId>athena-spring-boot-autoconfigure</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
				<groupId>com.xiongyayun.boot</groupId>
                <artifactId>athena-spring-boot-plugins</artifactId>
                <version>${revision}</version>
            </dependency>
			<dependency>
				<groupId>com.xiongyayun.boot</groupId>
				<artifactId>athena-spring-boot-starter</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>com.xiongyayun.boot</groupId>
				<artifactId>athena-spring-boot-plugin-oauth2-client</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>com.xiongyayun.boot</groupId>
				<artifactId>athena-spring-boot-plugin-oauth2-server</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>com.xiongyayun.boot</groupId>
				<artifactId>athena-spring-boot-plugin-security</artifactId>
				<version>${revision}</version>
			</dependency>
            <dependency>
                <groupId>com.xiongyayun.boot</groupId>
                <artifactId>athena-spring-boot-starters</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.xiongyayun.boot</groupId>
                <artifactId>athena-spring-boot-starter-docker</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
				<groupId>com.xiongyayun.boot</groupId>
                <artifactId>athena-spring-boot-starter-mybatis</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- druid starter -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-starter.version}</version>
            </dependency>

            <!-- Maven Plugin -->
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-plugin-api</artifactId>
                <version>${maven-plugin-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugin-tools</groupId>
                <artifactId>maven-plugin-annotations</artifactId>
                <version>${maven-plugin-annotations.version}</version>
            </dependency>

            <!-- Aliyun Oss -->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-sdk-oss.version}</version>
            </dependency>
            <!-- Aliyun Nacos -->
            <dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>nacos-config-spring-boot-starter</artifactId>
                <version>${alibaba-nacos.version}</version>
            </dependency>
			<dependency>
				<groupId>com.alibaba.boot</groupId>
				<artifactId>nacos-discovery-spring-boot-starter</artifactId>
				<version>${alibaba-nacos.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>${spring-security-oauth2.version}</version>
            </dependency>

            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.9</version>
            </dependency>
			<!-- mybatis-plus -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis-plus-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-core</artifactId>
				<version>${mybatis-plus-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-extension</artifactId>
				<version>${mybatis-plus-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-generator</artifactId>
				<version>${mybatis-plus-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-annotation</artifactId>
				<version>${mybatis-plus-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus</artifactId>
				<version>${mybatis-plus-boot.version}</version>
			</dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot.version}</version>
            </dependency>
			<dependency>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-core</artifactId>
				<version>${mybatis-generator.version}</version>
			</dependency>
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${mapper-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper</artifactId>
                <version>${tk.mybatis.mapper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <!-- ip地址查询库-->
<!--            <dependency>-->
<!--                <groupId>org.lionsoul</groupId>-->
<!--                <artifactId>ip2region</artifactId>-->
<!--                <version>1.7.2</version>-->
<!--            </dependency>-->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot</artifactId>
                <version>${jasypt-spring-boot.version}</version>
            </dependency>
			<dependency>
				<groupId>com.github.ulisesbocchio</groupId>
				<artifactId>jasypt-spring-boot-starter</artifactId>
				<version>${jasypt-spring-boot.version}</version>
			</dependency>
            <dependency>
                <groupId>com.alipay.sdk</groupId>
                <artifactId>alipay-sdk-java</artifactId>
                <version>3.7.89.ALL</version>
            </dependency>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>persistence-api</artifactId>
                <version>1.0.2</version>
            </dependency>
<!--			<dependency>-->
<!--				<groupId>javax.xml.bind</groupId>-->
<!--				<artifactId>jaxb-api</artifactId>-->
<!--				<version>2.3.1</version>-->
<!--			</dependency>-->
<!--			<dependency>-->
<!--				<groupId>com.sun.xml.bind</groupId>-->
<!--				<artifactId>jaxb-impl</artifactId>-->
<!--				<version>2.3.2</version>-->
<!--			</dependency>-->
<!--			<dependency>-->
<!--				<groupId>com.sun.xml.bind</groupId>-->
<!--				<artifactId>jaxb-core</artifactId>-->
<!--				<version>2.3.2</version>-->
<!--			</dependency>-->
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>javax.activation-api</artifactId>
				<version>1.2.0</version>
			</dependency>
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>1.3.2</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${alibaba-fastjson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-core</artifactId>
				<version>${flywaydb.version}</version>
			</dependency>

			<dependency>
				<groupId>com.xuxueli</groupId>
				<artifactId>xxl-job-core</artifactId>
				<version>${xxl-job.version}</version>
			</dependency>

			<dependency>
				<groupId>pentaho-kettle</groupId>
				<artifactId>kettle-core</artifactId>
				<version>${pentaho-kettle.version}</version>
			</dependency>
			<dependency>
				<groupId>pentaho-kettle</groupId>
				<artifactId>kettle-engine</artifactId>
				<version>${pentaho-kettle.version}</version>
			</dependency>
			<dependency>
				<groupId>pentaho-kettle</groupId>
				<artifactId>kettle-ui-swt</artifactId>
				<version>${pentaho-kettle.version}</version>
			</dependency>
			<dependency>
				<groupId>pentaho-kettle</groupId>
				<artifactId>kettle-dbdialog</artifactId>
				<version>${pentaho-kettle.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.tika</groupId>
				<artifactId>tika-core</artifactId>
				<version>1.24.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tika</groupId>
				<artifactId>tika-parsers</artifactId>
				<version>1.24.1</version>
			</dependency>
			<dependency>
				<groupId>org.xerial</groupId>
				<artifactId>sqlite-jdbc</artifactId>
				<version>3.32.3</version>
			</dependency>
			<dependency>
				<groupId>com.github.jai-imageio</groupId>
				<artifactId>jai-imageio-jpeg2000</artifactId>
				<version>1.3.0</version>
			</dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!--plugin management-->
        <pluginManagement>
            <plugins>
				<plugin>
					<groupId>com.github.ulisesbocchio</groupId>
					<artifactId>jasypt-maven-plugin</artifactId>
					<version>${jasypt-maven-plugin.version}</version>
				</plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>build-info</goal>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.version}</version>
                </plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>xml-maven-plugin</artifactId>
					<version>${xml-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.mybatis.generator</groupId>
					<artifactId>mybatis-generator-maven-plugin</artifactId>
					<version>${mybatis-generator.version}</version>
				</plugin>
				<plugin>
					<groupId>org.flywaydb</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>${flywaydb.version}</version>
				</plugin>
            </plugins>
        </pluginManagement>
    	<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
<!--					<execution>-->
<!--						&lt;!&ndash; Create an effective POM (with versions expanded) for the CLI and documentation &ndash;&gt;-->
<!--						<id>flatten-effective-pom</id>-->
<!--						<phase>process-resources</phase>-->
<!--						<goals>-->
<!--							<goal>flatten</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<updatePomFile>false</updatePomFile>-->
<!--							<outputDirectory>${project.build.directory}/effective-pom</outputDirectory>-->
<!--							<flattenedPomFilename>athena-spring-boot-dependencies.xml</flattenedPomFilename>-->
<!--							<flattenMode>oss</flattenMode>-->
<!--							<pomElements>-->
<!--								<dependencyManagement>expand</dependencyManagement>-->
<!--								<pluginManagement>expand</pluginManagement>-->
<!--								<properties>remove</properties>-->
<!--								<repositories>remove</repositories>-->
<!--								<profiles>remove</profiles>-->
<!--							</pomElements>-->
<!--						</configuration>-->
<!--					</execution>-->
					<execution>
						<!-- Flatten and simplify our own POM for install/deploy -->
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<updatePomFile>true</updatePomFile>
							<flattenMode>bom</flattenMode>
							<pomElements>
								<pluginManagement>keep</pluginManagement>
								<properties>keep</properties>
								<repositories>remove</repositories>
								<profiles>remove</profiles>
							</pomElements>
						</configuration>
					</execution>
					<execution>
						<id>flatten-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.codehaus.mojo</groupId>-->
<!--				<artifactId>xml-maven-plugin</artifactId>-->
<!--				<inherited>false</inherited>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						&lt;!&ndash; Cleanup the effective POM &ndash;&gt;-->
<!--						<id>post-process-effective-pom</id>-->
<!--						<phase>process-resources</phase>-->
<!--						<goals>-->
<!--							<goal>transform</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<transformationSets>-->
<!--								<transformationSet>-->
<!--									<dir>${project.build.directory}/effective-pom</dir>-->
<!--									<outputDir>${project.build.directory}/effective-pom</outputDir>-->
<!--									<stylesheet>src/main/xslt/post-process-flattened-pom.xsl</stylesheet>-->
<!--									<outputProperties>-->
<!--										<outputProperty>-->
<!--											<name>indent</name>-->
<!--											<value>yes</value>-->
<!--										</outputProperty>-->
<!--									</outputProperties>-->
<!--								</transformationSet>-->
<!--							</transformationSets>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						&lt;!&ndash; Cleanup the flattened project POM &ndash;&gt;-->
<!--						<id>post-process-flattened-pom</id>-->
<!--						<phase>process-resources</phase>-->
<!--						<goals>-->
<!--							<goal>transform</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<transformationSets>-->
<!--								<transformationSet>-->
<!--									<dir>${project.basedir}</dir>-->
<!--									<outputDir>${project.basedir}</outputDir>-->
<!--									<includes>.flattened-pom.xml</includes>-->
<!--									<stylesheet>src/main/xslt/post-process-flattened-pom.xsl</stylesheet>-->
<!--									<outputProperties>-->
<!--										<outputProperty>-->
<!--											<name>indent</name>-->
<!--											<value>yes</value>-->
<!--										</outputProperty>-->
<!--									</outputProperties>-->
<!--								</transformationSet>-->
<!--							</transformationSets>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
<!--			<plugin>-->
<!--				<groupId>org.codehaus.mojo</groupId>-->
<!--				<artifactId>build-helper-maven-plugin</artifactId>-->
<!--				<inherited>false</inherited>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						&lt;!&ndash; Attach effective POM &ndash;&gt;-->
<!--						<id>attach-artifacts</id>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>attach-artifact</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<artifacts>-->
<!--								<artifact>-->
<!--									<file>${project.build.directory}/effective-pom/athena-spring-boot-dependencies.xml</file>-->
<!--									<type>effective-pom</type>-->
<!--								</artifact>-->
<!--							</artifacts>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
		</plugins>
	</build>
</project>
